# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#Questions:

#What are the top 10 most popular tracks?
select track_name, artist_name, popularity
from BIT_DB.Spotifydata
order by popularity DESC
limit 10;

#Which artists have the highest average popularity?
select artist_name, avg(popularity) as avg_popularity
from BIT_DB.Spotifydata
group by artist_name
order by avg_popularity desc
limit 10;

#What 5 tracks have the highest energy levels?
select track_name, energy
from BIT_DB.Spotifydata
order by energy desc
limit 5;

#What artists have the most tracks in the top 50?
select artist_name, count(artist_name) as artist_count
from BIT_DB.Spotifydata
group by artist_name
order by artist_count desc;

#Determine the average popularity, danceability, and energy by artist and track
select artist_name, track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

#What is the average energy of songs with a danceability score above 0.7?
select track_name,artist_name, avg(energy) as avg_energy
from BIT_DB.Spotifydata
where danceability > 0.7
group by track_name, artist_name
order by avg_energy desc;
